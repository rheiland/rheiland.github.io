#
# simple.jy
#
# Jython script demonstrating Swing + VTK
#  - still need to figure out how to remove the "vtk." prefix on classes
#   e.g., instead of:
#      renPanel = vtk.vtkPanel()
#   want just:
#      renPanel = vtkPanel()
#
# R. Heiland, NCSA/UIUC
#

from pawt import swing
from java import awt
from string import *
from synchronize import make_synchronized
import java
import javax
from math import *
from vtk import *
from  java.lang.System import loadLibrary

loadLibrary("vtkJava")


#Frame = java.awt.Frame
Frame = javax.swing.JFrame


def exit(e):
  java.lang.System.exit(0)
exit = make_synchronized(exit)

class MyFrame(Frame) :
  def __init__(self) :
    self.title = 'Swingin VTK'


f = MyFrame()
#f.size = (300,320)

exitMenu = swing.JMenu('Exit')
exitItem1 = swing.JMenuItem('exit', actionPerformed=exit)
exitMenu.add(exitItem1)

menuBar = swing.JMenuBar()
menuBar.add(exitMenu)

mainPanel = swing.JPanel(layout=awt.BorderLayout())

mainPanel.add(menuBar,'North')
f.contentPane.add(mainPanel)
f.visible = 1

# --- VTK stuff ---

f.contentPane.addNotify()
renPanel = vtkPanel()
renPanel.setSize(300,300)
mainPanel.add(renPanel,'South')

f.pack()
f.setSize(apply(awt.Dimension, (300,400)))

# Smiley's face
#
points = vtkPoints()
npts = 20
delta = 2*3.1415 / (npts-1)
for i in range(0,npts):
  t = i*delta
#  print "t=", t, "cos(t)=", cos(t)
  points.InsertPoint(i,cos(t),sin(t),0)
#points.Print()

lines = vtkCellArray()
lines.InsertNextCell(npts) #number.of.points
for i in range(0,npts):
  lines.InsertCellPoint(i)

profile = vtkPolyData()
profile.SetPoints(points)
profile.SetLines(lines)

map = vtkPolyDataMapper()
#map.SetInput(extrude.GetOutput())
map.SetInput(profile)

head = vtkActor()
head.SetMapper(map)
head.GetProperty().SetColor(1.0,0.0,0.0)

ren = renPanel.getRenderer()
ren.AddActor(head)

xform = ['x0', 'x1']
eyeScale = 0.15
eyeX = 0.4
eyeY = 0.4
for idx in range(0,2):
  xform[idx] = vtkTransform()
  xform[idx].Identity()
  if idx == 0:
    xform[idx].Translate(-eyeX,eyeY,0)
  else:
    xform[idx].Translate(eyeX,eyeY,0)
  xform[idx].Scale(eyeScale,eyeScale,1)

mouthX = vtkTransform()
mouthX.Identity()
mouthX.Translate(0,-0.3,0)
mouthX.Scale(0.5,0.2,1)

lEye = vtkActor()
lEye.SetMapper(map)
lEye.SetUserMatrix(xform[0].GetMatrix())
rEye = vtkActor()
rEye.SetMapper(map)
rEye.SetUserMatrix(xform[1].GetMatrix())
mouth = vtkActor()
mouth.SetMapper(map)
mouth.SetUserMatrix(mouthX.GetMatrix())

# Some text
text3Source = vtkVectorText()
text3Source.SetText("Wow, JPython and VTK!")

text3Mapper = vtkPolyDataMapper()
text3Mapper.SetInput(text3Source.GetOutput())
text3Mapper.ScalarVisibilityOff()

textX = vtkTransform()
textX.Identity()
textX.Translate(-1.3,-1.3,0)
textX.Scale(0.15,0.15,1)

text3Actor = vtkActor()
text3Actor.SetMapper(text3Mapper)
text3Actor.GetProperty().SetColor(0,1,1)
#text3Actor.AddPosition(0.1,-1.1,0)
text3Actor.SetUserMatrix(textX.GetMatrix())


# Add all the actors to the renderer
ren.AddActor(head)
ren.AddActor(lEye)
ren.AddActor(rEye)
ren.AddActor(mouth)
ren.AddActor(text3Actor)
